The `matrix_divided` Function Tests
====================================

Documentation and Test Cases for `matrix_divided`
------------------------------------------------

Using the `matrix_divided` function
------------------------------------

This file is in reStructuredText format.
First, import `matrix_divided` from the `2-matrix_divided` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Verifying Documentation Exists
-------------------------------

- Module documentation check:

    >>> module_doc = __import__("2-matrix_divided").__doc__
    >>> assert len(module_doc) > 0

- Function documentation check:

    >>> func_doc = __import__("2-matrix_divided").matrix_divided.__doc__
    >>> assert len(func_doc) > 0

Basic Functionality
-------------------

- Simple division:

    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

Testing with Different Divisors
-------------------------------

- Division by a float:

    >>> matrix_divided([[1, 2], [3, 4], [5, 6]], 3.5)
    [[0.29, 0.57], [0.86, 1.14], [1.43, 1.71]]

- Division by an integer:

    >>> matrix_divided([[1, 2], [3, 4], [5, 6]], 2)
    [[0.5, 1.0], [1.5, 2.0], [2.5, 3.0]]

Handling Invalid Inputs
-----------------------

- Passing a non-matrix object:

    >>> matrix_divided("not_a_matrix", 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

- Passing a matrix with rows of different sizes:

    >>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
    Traceback (most recent call last):
    ...
    ValueError: Each row of the matrix must have the same size

- Dividing by zero:

    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

